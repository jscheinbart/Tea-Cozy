
    /* The * element selector selects everything on the page
     - blocks inheritance of other properties */
*{
    font-family: Helvetica;
    /* color is referencing the text color */
    color: seashell;
    background-color: black;
    /* Opacity is also in reference of the text color, setting it to .9 makes it less 
       harsh on a dark background */
    opacity: 0.9;
    /* Sets the alignment for text to be in the center */
    text-align: center;

    /* Resets the browser defaults */
    padding: 0;
    margin: 0;
}
    /* Placing font-size here makes the property inheritable */
html {
    font-size: 22px;
}
    /*Top of the page, the 'navigation bar' */   
header {
    /* Tells the element to span the full width of the page, this is a responsive property */
    width: 100%;
    /* Sets the height of the nav bar */
    height: 69px;
    border-bottom: 1px solid seashell;
    /* Position property fixes the nav bar to the top of the page, remains there when scrolled */
    position: fixed;
    /* Initializes the header as a flex container */
    display: flex;
    /* A flexbox term that aligns items vertically within a container 
       The center value sets flex items halfway between the top and the bottom of the container*/
    align-items: center;
    /* Another flexbox term that aligns items horizontally within a container
       The space-between value positions with equal space between them, 
       but no extra space before the first or after the last 
       THIS IS THE ELEMENT THAT SETS THE ITEMS AT OPPOSITE SIDES OF THE NAVBAR*/
    justify-content: space-between;
    /* A low z-index sets an item in front or behind
        The greater the stack order #, the closer to the front */
    z-index: 10;
}
  
    /* Header is the container, a is the nav link within the header */

header a {
    /* Margin in this example determines the space between each 'a' element.
       Typically one number would set the margin on all four sides,
       However, since the header set the items as 'align-items: center;', 
       This margin only impacts the left and right sides of the elements */
    margin: 10px;
}

    /* Img is referring to the logo */
header img {
    /* Determines the size of the image/loco */
    height: 50px;
    /* Sets the margin off from the left side of the screen by 10px */
    margin-left: 10px; 
}
    /* Main is used as another container within the body tags */
main {
    /* Tells all of the contents of main to display relative to the other content on the page */
    position: relative;
    /* Offsets the main content by 70px to account for the navbar */
    top: 70px;
    /*Intializes the main content as a flex container */
    display: flex;
    /* Flex-flow is used to declare both the flex-wrap and flex-direction in one fell swoop
       Column is a flex-direction value
       elements will be positioned from top to bottom of the parent element starting in the top left */
    flex-flow: column;
    justify-content: space-between;
    /* Aligns its contents vertically centered */
    align-items: center;
    /* Sets the contents of main to be the width of the window */
    width: 100%;
}
    /* First section is the mission */
#mission {
    /* Sets this section to be 90% of the width of its container (main) */
    width: 90%;
    /* If it has the space, the tallest it will get is 700px
       This makes it look not too spread out if the window is big */
    max-height: 700px;
    /* Same concept as max height */
    max-width: 1200px;
    /* guarantees that the left and right margins will be set to the same size. 
    The first parameter 0 indicates that the top and bottom margins will both be set to 0. */
    margin: 0 auto;
    /* Initializes the mission container as a flex container */
    display: flex;
    /* Flex-flow is used to declare both the flex-wrap and flex-direction in one fell swoop
       Column is a flex-direction value
       elements will be positioned from top to bottom of the parent element starting in the top left */
    flex-flow: column;
    /* all items will be positioned in the center instead of default top left */
    justify-content: center;
    /* aligns the items vertically in the center */
    align-items: center;
    /* Specifies flex-grow, flex-shring and flex-basis all in one declaration
        First value (1) is flex-grow and determines if any items should grow proportionally larger than another
        the second figure is flex basis (1200px), 
        which is another way of specifying the width before it stretches or shrinks. */
    flex: 1 1200px;
    /* Pulls in the background image */
    background-image: url("https://content.codecademy.com/courses/freelance-1/unit-4/img-mission-background.jpg");
    /* The following are all properties to control the background image */
    background-repeat: no-repeat;
    background-position: center;
    /* Scales the image to cover the entire container */
    background-size: cover;  
}

    /* Selects the h2 and h4 elements in the Mission container 
       #mission is written twice because otherwise a full bar of background will not be set*/
#mission h2 h4 {
    /* These elements take on the properties selected at the beginning with the * selector
       The width is set to 100% so that the background color fills 100% of the container, 
       blocking the background image */
    width: 100%;
    /* Padding creates space within the element, pushing out the background
       The percentage is the taken from the WIDTH of the element. */
    padding: 0.5%;
}

/* Featured tea section */

#tea-of-the-month {
    width: 75%;
    max-width: 1000px;
    display: flex;
    flex-direction: column;
    padding-top: 70px;
}

.container-head{
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    margin-bottom: 2%;
}


.container-head h2 {
    margin: 2% 0;
}

.figure-container {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-around;
    align-items: center;
}

figure {
    width: 300px;
    height: 67%;
    overflow: hidden;
    margin: 1%;
}

figure img {
    max-width: 100%;
    height: auto;
    display: block;
}

figcaption {
    margin-top: 3.334%;
}

/*Locations Section*/

#locations {
    width: 90%;
    max-height: 500px;
    max-width: 1200px;
    padding-top: 5%;
    margin-top: 5%;
    display: flex;
    flex-flow: column;
    justify-content: left;
    align-items: center;
    flex: 1 1200px;
    background-image: url("https://s3.amazonaws.com/codecademy-content/courses/freelance-1/unit-4/img-locations-background.jpg");
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
}

.locations-title {
    width: 100%;
    display: flex;
    justify-content: center;
    background-color: transparent;
}

.locations-title h2 {
    background-color: transparent;
}

#location-container {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 300px;
    background-color: transparent;
    flex-wrap: wrap;
    opacity: 1; 
}

.location-panel {
    margin: 20px;
    display: flex;
    flex-basis: 300px;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    opacity: 1;   
}

.location-panel h3 {
    padding: 5% 0;
    width: 100%;
}

.location-panel p {
    padding: 7.5% 0;
    width: 100%;
}

/*contact info section*/

#contact-info {
    height: 200px;
    margin: 0 auto;
    width: 75%;
    max-width: 1000px;
    display: flex;
    flex-direction: column;
}

#contact-info h2 {
    margin: 1% auto;
}

#contact-info h5 {
    margin: 2.9% auto;
}

/* Footer */

footer {
    padding: 20px;
    display: flex;
    justify-content: left;
}

/* Media Queries */


/* For a cell phone*/

@media only screen and (max-width: 480px) {
    html {
      font-size: 12px;
    }
  }

/* For a tablet in landscape mode */

@media only screen and (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {
    /* CSS ruleset */
}